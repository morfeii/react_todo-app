{"version":3,"sources":["components/NewTodo.js","components/TodoItem.js","components/TodoList.js","components/TodosFilter.js","App.js","index.js"],"names":["NewTodo","state","title","handleChangeInput","value","target","setState","replace","handleSubmit","event","preventDefault","addNewTodo","props","id","uuidv4","completed","this","className","onSubmit","placeholder","onChange","React","Component","TodoItem","isEditing","todoTitle","handleDoubleClick","handleChangeEdit","onEditChange","handleEditSubmit","todoId","handleDeleteTodo","todoStatus","handleTodoStatus","liClassName","cn","editing","type","onBlur","checked","onDoubleClick","htmlFor","onClick","TodoList","todosList","length","map","key","TodosFilter","initialTodos","buttonSelected","handleButtonChange","handleDeleteAllCompleted","buttonClearStyles","cx","disable","some","todo","footerStyle","hidden","filter","href","App","todos","handleAddNewTodo","prevState","handlecompletedAll","filterFunc","every","mapFuncStatusTodo","todosFilter","mapFuncEditTitle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20ee35e8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport class NewTodo extends React.Component {\n  state = {\n    title: '',\n  }\n\n  handleChangeInput = ({ target: { value } }) => {\n    this.setState({\n      title: value.replace(/^\\s/, ''),\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { addNewTodo } = this.props;\n    const { title } = this.state;\n\n    addNewTodo({\n      title,\n      id: uuidv4(),\n      completed: false,\n    });\n\n    this.setState({\n      title: '',\n    });\n  }\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            className=\"new-todo\"\n            value={title}\n            placeholder=\"What needs to be done?\"\n            onChange={this.handleChangeInput}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nNewTodo.propTypes = {\n  addNewTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport class TodoItem extends React.Component {\n  state = {\n    isEditing: false,\n    todoTitle: this.props.todoTitle,\n  }\n\n  handleDoubleClick = () => {\n    this.setState({\n      isEditing: true,\n    });\n  }\n\n  handleChangeEdit = () => {\n    this.setState({\n      isEditing: false,\n    });\n  }\n\n  onEditChange = ({ target: { value } }) => {\n    this.setState({\n      todoTitle: value,\n    });\n  }\n\n  handleEditSubmit = () => {\n    const {\n      handleDoubleClick,\n      todoId,\n      handleDeleteTodo,\n    } = this.props;\n    const { todoTitle } = this.state;\n\n    this.setState({\n      isEditing: false,\n    });\n\n    if (todoTitle !== '') {\n      handleDoubleClick(todoTitle, todoId);\n    } else {\n      handleDeleteTodo(todoId);\n    }\n  }\n\n  render() {\n    const {\n      todoStatus,\n      todoId,\n      handleTodoStatus,\n      handleDeleteTodo,\n    } = this.props;\n    const { todoTitle } = this.state;\n    const liClassName = cn({\n      editing: this.state.isEditing,\n      completed: todoStatus,\n    });\n\n    return (\n      <li className={liClassName}>\n        { !this.state.isEditing\n          ? (\n            <div className=\"view\">\n              <input\n                type=\"checkbox\"\n                className=\"toggle\"\n                id={todoId}\n                checked={todoStatus}\n                onChange={() => handleTodoStatus(todoId)}\n              />\n              <p\n                className=\"label\"\n                onDoubleClick={this.handleDoubleClick}\n                htmlFor={todoId}\n              >\n                {todoTitle}\n              </p>\n              <button\n                type=\"button\"\n                className=\"destroy\"\n                onClick={() => handleDeleteTodo(todoId)}\n              />\n            </div>\n          )\n          : (\n            <form\n              onSubmit={this.handleEditSubmit}\n            >\n              <input\n                type=\"text\"\n                className=\"edit\"\n                value={todoTitle}\n                onChange={this.onEditChange}\n                onBlur={this.handleChangeEdit}\n              />\n            </form>\n          )\n        }\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todoTitle: PropTypes.string.isRequired,\n  todoStatus: PropTypes.bool.isRequired,\n  todoId: PropTypes.string.isRequired,\n  handleTodoStatus: PropTypes.func.isRequired,\n  handleDeleteTodo: PropTypes.func.isRequired,\n  handleDoubleClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from './TodoItem';\n\nexport const TodoList = ({\n  todosList,\n  handleTodoStatus,\n  handleDeleteTodo,\n  handleDoubleClick,\n}) => (\n  <ul className=\"todo-list\">\n    {todosList.length\n      ? todosList\n        .map(({ title, completed, id }) => (\n          <TodoItem\n            key={id}\n            todosList={todosList}\n            todoTitle={title}\n            todoStatus={completed}\n            todoId={id}\n            handleTodoStatus={handleTodoStatus}\n            handleDeleteTodo={handleDeleteTodo}\n            handleDoubleClick={handleDoubleClick}\n          />\n        ))\n      : null\n    }\n  </ul>\n);\n\nTodoList.propTypes = {\n  todosList: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.string,\n    completed: PropTypes.bool,\n  })).isRequired,\n  handleTodoStatus: PropTypes.func.isRequired,\n  handleDeleteTodo: PropTypes.func.isRequired,\n  handleDoubleClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nexport const TodosFilter = ({\n  todosList,\n  initialTodos,\n  buttonSelected,\n  handleButtonChange,\n  handleDeleteAllCompleted,\n}) => {\n  const buttonClearStyles = cx('clear-completed', {\n    disable: !todosList.some(todo => todo.completed),\n  });\n  const footerStyle = cx('footer', {\n    hidden: !initialTodos.length,\n  });\n\n  return (\n    <footer className={footerStyle}>\n      <span className=\"todo-count\">\n        {initialTodos.length && initialTodos\n          .filter(todo => !todo.completed).length}\n        {' items left'}\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/all\"\n            className={buttonSelected === 'all' ? 'selected' : ''}\n            onClick={() => handleButtonChange('all')}\n          >\n            All\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"#/active\"\n            className={buttonSelected === 'active' ? 'selected' : ''}\n            onClick={() => handleButtonChange('active')}\n          >\n            Active\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"#/completed\"\n            className={buttonSelected === 'completed' ? 'selected' : ''}\n            onClick={() => handleButtonChange('completed')}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      <button\n        type=\"button\"\n        className={buttonClearStyles}\n        onClick={handleDeleteAllCompleted}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n\nTodosFilter.propTypes = {\n  handleButtonChange: PropTypes.func.isRequired,\n  initialTodos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.string,\n    completed: PropTypes.bool,\n  })).isRequired,\n  todosList: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.string,\n    completed: PropTypes.bool,\n  })).isRequired,\n  buttonSelected: PropTypes.string.isRequired,\n  handleDeleteAllCompleted: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nimport { NewTodo } from './components/NewTodo';\nimport { TodoList } from './components/TodoList';\nimport { TodosFilter } from './components/TodosFilter';\n\nexport class App extends React.Component {\n  state = {\n    todos: [],\n    initialTodos: [],\n    buttonSelected: 'all',\n  }\n\n  handleAddNewTodo = (todo) => {\n    if (todo.title) {\n      this.setState(prevState => ({\n        todos: [...prevState.todos, todo],\n        initialTodos: [...prevState.initialTodos, todo],\n      }));\n    }\n\n    this.handleButtonChange(this.state.buttonSelected);\n  };\n\n  handlecompletedAll = () => {\n    const filterFunc = todos => (\n      todos.map(todo => ({\n        ...todo,\n        completed: !todos.every(({ completed }) => completed),\n      }))\n    );\n\n    this.setState(prevState => ({\n      todos: filterFunc(prevState.todos),\n      initialTodos: filterFunc(prevState.initialTodos),\n    }));\n    this.handleButtonChange(this.state.buttonSelected);\n  };\n\n  handleTodoStatus = (todoId) => {\n    const mapFuncStatusTodo = todo => (\n      todo.id === todoId\n        ? {\n          ...todo, completed: !todo.completed,\n        }\n        : todo\n    );\n\n    this.setState(prevState => ({\n      todos: prevState.todos.map(mapFuncStatusTodo),\n      initialTodos: prevState.initialTodos.map(mapFuncStatusTodo),\n    }));\n  };\n\n  handleDeleteTodo = (todoId) => {\n    const todosFilter = todo => (\n      todo.id !== todoId\n    );\n\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todosFilter),\n      initialTodos: prevState.initialTodos.filter(todosFilter),\n    }));\n  };\n\n  handleDoubleClick = (todoTitle, todoId) => {\n    const mapFuncEditTitle = todo => (\n      todo.id === todoId\n        ? {\n          ...todo, title: todoTitle,\n        }\n        : todo\n    );\n\n    this.setState(prevState => ({\n      todos: prevState.todos.map(mapFuncEditTitle),\n    }));\n  };\n\n  handleButtonChange = (value) => {\n    switch (value) {\n      case 'active':\n        this.setState(prevState => ({\n          todos: prevState.initialTodos.filter(todo => !todo.completed),\n          buttonSelected: 'active',\n        }));\n        break;\n      case 'completed':\n        this.setState(prevState => ({\n          todos: prevState.initialTodos.filter(todo => todo.completed),\n          buttonSelected: 'completed',\n        }));\n        break;\n      case 'all':\n      default:\n        this.setState(prevState => ({\n          todos: [...prevState.initialTodos],\n          buttonSelected: 'all',\n        }));\n    }\n  };\n\n  handleDeleteAllCompleted = () => {\n    const filterFunc = todos => (\n      todos.filter(todo => !todo.completed)\n    );\n\n    this.setState(prevState => ({\n      todos: filterFunc(prevState.todos),\n      initialTodos: filterFunc(prevState.initialTodos),\n    }));\n  };\n\n  render() {\n    const {\n      todos, initialTodos, buttonSelected,\n    } = this.state;\n\n    return (\n      <div className=\"todoapp\">\n        <NewTodo addNewTodo={this.handleAddNewTodo} />\n\n        <div className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onChange={this.handlecompletedAll}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as completed</label>\n\n          <TodoList\n            todosList={todos}\n            handleTodoStatus={this.handleTodoStatus}\n            handleDeleteTodo={this.handleDeleteTodo}\n            handleDoubleClick={this.handleDoubleClick}\n          />\n        </div>\n        <TodosFilter\n          todosList={todos}\n          initialTodos={initialTodos}\n          buttonSelected={buttonSelected}\n          handleButtonChange={this.handleButtonChange}\n          handleDeleteAllCompleted={this.handleDeleteAllCompleted}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}